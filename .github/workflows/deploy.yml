name: Deploy PatrolD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create environment file
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
        echo "PGUSER=${{ secrets.PGUSER }}" >> .env
        echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> .env
        echo "PGHOST=${{ secrets.PGHOST }}" >> .env
        echo "PGPORT=${{ secrets.PGPORT }}" >> .env
        echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> .env
        echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
        echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
        echo "PORT=5000" >> .env

    - name: Install PostgreSQL Client
      run: sudo apt-get update && sudo apt-get install -y postgresql-client
        
    - name: Run database migrations
      run: |
        # Set environment variables for database from secrets
        export PGPASSWORD=${{ secrets.PGPASSWORD }}
        export PGHOST=${{ secrets.PGHOST }}
        export PGPORT=${{ secrets.PGPORT }}
        export PGUSER=${{ secrets.PGUSER }}
        export PGDATABASE=${{ secrets.PGDATABASE }}
        export DATABASE_URL=${{ secrets.DATABASE_URL }}
        
        # Check if postgresql-client is installed, install if not
        which psql || sudo apt-get update && sudo apt-get install -y postgresql-client
        
        # Create schema if doesn't exist (with proper error handling)
        psql -c "CREATE SCHEMA IF NOT EXISTS public;" || echo "Schema creation failed, but continuing..."
        
        # Now run the database migrations
        npm run db:push

    - name: Build application
      run: npm run build

    - name: Restart PM2 service
      run: |
        pm2 restart patrold || pm2 start npm --name "patrold" -- start
        pm2 save

    - name: Package Debian
      run: ./build_deb.sh

    - name: Deploy to web directory
      run: |
        cp patrold_1.0.0_all.deb /var/www/html/
        
    - name: Notification
      if: success()
      run: |
        echo "PatrolD deployment completed successfully!"