stages:
  - build
  - deploy

variables:
  NODE_VERSION: "20"

build:
  stage: build
  image: node:${NODE_VERSION}
  tags:
    - self-hosted
  before_script:
    - echo "Setting up build environment"
  script:
    - npm ci
    - npm run build
    - ./build_deb.sh
  artifacts:
    paths:
      - dist/
      - patrold_1.0.0_all.deb
    expire_in: 1 week

deploy:
  stage: deploy
  image: node:${NODE_VERSION}
  tags:
    - self-hosted
  before_script:
    - echo "PostgreSQL Client zaten kurulu olduğunu varsayıyoruz"
  script:
    - export DATABASE_URL="${DATABASE_URL}"
    - export PGUSER="${PGUSER}"
    - export PGPASSWORD="${PGPASSWORD}"
    - export PGHOST="${PGHOST}"
    - export PGPORT="${PGPORT}"
    - export PGDATABASE="${PGDATABASE}"
    - export TELEGRAM_BOT_TOKEN="${TELEGRAM_TOKEN}"
    - export SESSION_SECRET="${SESSION_SECRET}"
    - npm ci
    # Create schema if it doesn't exist
    - PGPASSWORD="${PGPASSWORD}" psql -h "${PGHOST}" -p "${PGPORT}" -U "${PGUSER}" -d "${PGDATABASE}" -c "CREATE SCHEMA IF NOT EXISTS public;"
    # Run migrations
    - npm run db:push
    - cp patrold_1.0.0_all.deb /var/www/html/ || echo "Warning: Failed to copy Debian package to web directory"
    - npm install -g pm2
    # PM2 için .env.pm2 dosyası oluştur
    - echo "export DATABASE_URL=\"${DATABASE_URL}\"" > .env.pm2
    - echo "export PGUSER=\"${PGUSER}\"" >> .env.pm2
    - echo "export PGPASSWORD=\"${PGPASSWORD}\"" >> .env.pm2
    - echo "export PGHOST=\"${PGHOST}\"" >> .env.pm2
    - echo "export PGPORT=\"${PGPORT}\"" >> .env.pm2
    - echo "export PGDATABASE=\"${PGDATABASE}\"" >> .env.pm2
    - echo "export TELEGRAM_BOT_TOKEN=\"${TELEGRAM_TOKEN}\"" >> .env.pm2
    - echo "export SESSION_SECRET=\"${SESSION_SECRET}\"" >> .env.pm2
    - echo "export PORT=5000" >> .env.pm2
    
    # PM2 ecosystem.config.js oluştur
    - |
      cat > ecosystem.config.js << 'EOL'
      module.exports = {
        apps: [{
          name: "patrold",
          script: "npm",
          args: "start",
          instances: 1,
          autorestart: true,
          watch: false,
          max_memory_restart: "500M",
          env_file: ".env.pm2"
        }]
      };
      EOL
    
    # PM2 ile uygulamayı başlat
    - pm2 restart patrold || pm2 start ecosystem.config.js
    - pm2 save
  only:
    - main